type Person {
  _id: Long!
  age: Int!
  birthplace: String!
  forename: String!
  household: String!
  occupation: String!
  relationToHead: String!
  religion: String!
  sex: String!
  surname: String!
  soundex: String!
  related_to: [Person] @relation(name: "RELATED_TO", direction: "OUT")
  related_from: [Person] @relation(name: "RELATED_TO", direction: "IN")
  RELATED_TO_rel: [RELATED_TO]
}

type RELATED_TO @relation(name: "RELATED_TO") {
  from: Person!
  to: Person!
  name: String!
}

type Query {
  personCount(year: String): Int!
    @cypher(
      statement: "MATCH (p:Person) WHERE p.household CONTAINS $year RETURN COUNT(p)"
    )
  houseCount(year: String): Int!
    @cypher(
      statement: "MATCH (n) WHERE n.household CONTAINS $year RETURN count(DISTINCT n.household)"
    )
  findFamilies(year: String, forename: String): [Person]
    @cypher(
      statement: "MATCH (n) WHERE n.forename = $forename AND n.household CONTAINS $year RETURN n"
    )
}
